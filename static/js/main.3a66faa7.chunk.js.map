{"version":3,"sources":["components/MapChoosing/oceanImg.jpg","components/MapChoosing/volcanoImg.png","components/Settings/on.png","components/Index/background.png","components/Index/start.png","components/Index/settings.png","components/MapChoosing/bg.png","components/MapChoosing/jungleBtn.png","components/MapChoosing/snowBtn.png","components/MapChoosing/oceanBtn.png","components/MapChoosing/volcanoBtn.png","components/MapChoosing/jungleV.mp4","components/MapChoosing/jungleV.webm","components/MapChoosing/snowV.mp4","components/MapChoosing/snowV.webm","components/MapChoosing/jungleImg.png","components/MapChoosing/snowImg.png","components/MapChoosing/back.png","components/Settings/bg.png","components/Settings/back.png","components/Index/index.jsx","components/MapChoosing/index.jsx","components/Settings/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","react_default","a","createElement","className","style","styles","bg","paddingTop","paddingLeft","es","to","src","startImg","settingsImg","backgroundImage","concat","bgImg","MapChoosing","basename","width","height","position","top","left","jungleBtn","snowBtn","oceanBtn","volcanoBtn","right","path","render","jungleImg","banner","snowImg","replace","oceanImg","volcanoImg","fullScreen","autoPlay","controls","jungleWebm","type","jungleMp4","snowWebm","snowMp4","backImg","Component","imgWrapper","display","float","zIndex","Settings","onImg","img","margin","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a66faa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oceanImg.d4e27712.jpg\";","module.exports = __webpack_public_path__ + \"static/media/volcanoImg.86db7e07.png\";","module.exports = __webpack_public_path__ + \"static/media/on.3612a1f1.png\";","module.exports = __webpack_public_path__ + \"static/media/background.a88dd3be.png\";","module.exports = __webpack_public_path__ + \"static/media/start.9f08a075.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.9e291a11.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.6334da49.png\";","module.exports = __webpack_public_path__ + \"static/media/jungleBtn.5857c1cd.png\";","module.exports = __webpack_public_path__ + \"static/media/snowBtn.9bd0050d.png\";","module.exports = __webpack_public_path__ + \"static/media/oceanBtn.816286ae.png\";","module.exports = __webpack_public_path__ + \"static/media/volcanoBtn.3cf47f00.png\";","module.exports = __webpack_public_path__ + \"static/media/jungleV.7e767ac9.mp4\";","module.exports = __webpack_public_path__ + \"static/media/jungleV.1883e25d.webm\";","module.exports = __webpack_public_path__ + \"static/media/snowV.9ed8fe55.mp4\";","module.exports = __webpack_public_path__ + \"static/media/snowV.4bb6df62.webm\";","module.exports = __webpack_public_path__ + \"static/media/jungleImg.419b7682.png\";","module.exports = __webpack_public_path__ + \"static/media/snowImg.d794e581.png\";","module.exports = __webpack_public_path__ + \"static/media/back.9615da66.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.94554ad8.png\";","module.exports = __webpack_public_path__ + \"static/media/back.9615da66.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport bgImg from './background.png';\r\nimport startImg from './start.png';\r\nimport settingsImg from './settings.png';\r\n\r\nexport default () => (\r\n  <div className=\"bg\" style={styles.bg}>\r\n    <div style={{ paddingTop: 200, paddingLeft: 200, }}>\r\n      <Link to=\"/map-choosing/jungle\">\r\n        <img src={startImg} className=\"btn\" />\r\n      </Link>\r\n      <br />\r\n      <Link to=\"/settings\">\r\n        <img src={settingsImg} className=\"btn\" />\r\n      </Link>\r\n    </div>\r\n  </div>\r\n  \r\n);\r\n\r\nconst styles = {\r\n  bg: {\r\n    backgroundImage: `url(${bgImg})`,\r\n    // backgroundSize: '100%',\r\n  },\r\n  \r\n};\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport bgImg from './bg.png';\r\n\r\nimport jungleBtn from './jungleBtn.png';\r\nimport snowBtn from './snowBtn.png';\r\nimport oceanBtn from './oceanBtn.png';\r\nimport volcanoBtn from './volcanoBtn.png';\r\n\r\nimport jungleMp4 from './jungleV.mp4';\r\nimport jungleWebm from './jungleV.webm';\r\nimport snowMp4 from './snowV.mp4';\r\nimport snowWebm from './snowV.webm';\r\nimport jungleImg from './jungleImg.png';\r\nimport snowImg from './snowImg.png';\r\nimport oceanImg from './oceanImg.jpg';\r\nimport volcanoImg from './volcanoImg.png';\r\n\r\nimport backImg from './back.png';\r\n\r\nclass MapChoosing extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bg\" style={styles.bg}>\r\n        <BrowserRouter\r\n          basename=\"/map-choosing\"\r\n        >\r\n          <div style={{ width: '100%', height: '100%' }}>\r\n            <div style={{\r\n              // ...styles.imgWrapper,\r\n              // width: '35%',\r\n              // padding: '100px 0 100px 100px',\r\n              position: 'absolute',\r\n              top: '40%',\r\n              left: 100,\r\n            }}>\r\n              <Link to=\"/jungle\">\r\n                <img src={jungleBtn} className=\"small-btn\"\r\n                  style={{ position: 'relative', left: 22 }}\r\n                />\r\n              </Link>\r\n              <br />\r\n              <Link to=\"/snow\">\r\n                <img src={snowBtn} className=\"small-btn\"\r\n                  style={{ position: 'relative', left: 30 }}\r\n                />\r\n              </Link>\r\n              <br />\r\n              <Link to=\"/ocean\">\r\n                <img src={oceanBtn} className=\"small-btn\"\r\n                  style={{ position: 'relative', left: 38 }}\r\n                />\r\n              </Link>\r\n              <br />\r\n              <Link to=\"/volcano\">\r\n                <img src={volcanoBtn} className=\"small-btn\"\r\n                  style={{ position: 'relative', left: 50 }}\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div style={{\r\n              // ...styles.imgWrapper, width: '65%'\r\n              width: 380,\r\n              position: 'absolute',\r\n              top: '40%',\r\n              right: 5,\r\n            }}>\r\n              <Switch>\r\n                <Route path=\"/jungle\" render={() =>\r\n                  <Link to=\"/jungle-display\">\r\n                    <img src={jungleImg} style={styles.banner} />\r\n                  </Link>\r\n                } />\r\n                <Route path=\"/snow\" render={() =>\r\n                  <Link to=\"/snow-display\">\r\n                    <img src={snowImg} style={styles.banner} />\r\n                  </Link>\r\n              } />\r\n                <Route path=\"/ocean\" render={() =>\r\n                  <Link to=\"/ocean-display\" replace>\r\n                    <img src={oceanImg} style={styles.banner} />\r\n                  </Link>\r\n                } />\r\n                <Route path=\"/volcano\" render={() =>\r\n                  <Link to=\"/volcano-display\">\r\n                    <img src={volcanoImg} style={styles.banner} />\r\n                  </Link>\r\n                } />\r\n              </Switch>\r\n              \r\n            </div>\r\n            <Switch>\r\n              <Route path=\"/jungle-display\" render={() => (\r\n                <video style={styles.fullScreen} autoPlay controls>\r\n                  <source src={jungleWebm} type=\"video/webm\" />\r\n                  <source src={jungleMp4} type=\"video/mp4\" />\r\n                </video>\r\n              )} />\r\n              <Route path=\"/snow-display\" render={() => (\r\n                <video style={styles.fullScreen} autoPlay controls>\r\n                  <source src={snowWebm} type=\"video/webm\" />\r\n                  <source src={snowMp4} type=\"video/mp4\" />\r\n                </video>\r\n              )} />\r\n              <Route path=\"/ocean-display\" render={() => (\r\n                <img src={oceanImg} style={styles.fullScreen} />\r\n              )} />\r\n              <Route path=\"/volcano-display\" render={() => (\r\n                <img src={volcanoImg} style={styles.fullScreen} />\r\n              )} />\r\n            </Switch>\r\n            \r\n          </div>\r\n          \r\n        </BrowserRouter>\r\n\r\n        <Link to=\"/\">\r\n          <img src={backImg}\r\n            className=\"back-btn\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  bg: {\r\n    backgroundImage: `url(${bgImg})`,\r\n  },\r\n  imgWrapper: {\r\n    display: 'inline-block',\r\n    height: '100%',\r\n  },\r\n  banner: {\r\n    width: '80%',\r\n    float:'right',\r\n  },\r\n  fullScreen: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    zIndex: 100,\r\n  },\r\n};\r\n\r\nexport default MapChoosing;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport bgImg from './bg.png';\r\nimport onImg from './on.png';\r\nimport backImg from './back.png';\r\n\r\nexport default () => (\r\n  <div className=\"bg\" style={styles.bg}>\r\n    {/* <div style={{  }}> */}\r\n      <div style={styles.imgWrapper}>\r\n        <img src={onImg} style={styles.img} />\r\n      </div>\r\n      <div style={styles.imgWrapper}>\r\n        <img src={onImg} style={styles.img} />\r\n      </div>\r\n    {/* </div> */}\r\n    <Link to=\"/\">\r\n      <img src={backImg}\r\n        className=\"back-btn\"\r\n      />\r\n    </Link>\r\n  </div>\r\n  \r\n);\r\n\r\nconst styles = {\r\n  bg: {\r\n    backgroundImage: `url(${bgImg})`,\r\n  },\r\n  imgWrapper: {\r\n    display: 'inline-block',\r\n    width: '50%',\r\n    height: '100%',\r\n  },\r\n  img: {\r\n    display: 'block',\r\n    width: '100px',\r\n    height: '100px',\r\n    margin: '40% auto 40% auto',\r\n  },\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Index from './components/Index';\nimport MapChoosing from './components/MapChoosing';\nimport Settings from './components/Settings';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/map-choosing\" component={MapChoosing} />\n          <Route path=\"/settings\" component={Settings} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}